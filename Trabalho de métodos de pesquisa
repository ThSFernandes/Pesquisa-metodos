Pesquisa de métodos 
Tema: Fundamentos da Programação Orientada a Objetos e nossa experiência no seu aprendizado
Pesquisa sendo feita

Artigos para usar de base: 
-> https://d1wqtxts1xzle7.cloudfront.net/35846155/1415858715_POO-with-cover-page-v2.pdf?Expires=1667008071&Signature=a~pu52g9zmmv0rdDiqEfEPNUdxDYDQG0NL5Wb3tttZ7MHbJNuES0WjgTbluSSPuMowzvxpPfBWc2Zkv7am9TJB8bPy9yGmUprgs0DupD1Tw1zz~qSFihidekQj8Pd8TKkr8m5sGbb4Sd~baomDzglz6ybrYI9XegWHM3p0wf~cSBGHXdLmdm73WbPwn0J61TZ5aMz3sqTTnfZ-rI85m8Gn8TLjiIaF2K5GMUnpV7UcZQVst~lGWApvKJBGd1JVvm3l1wJ7RQKFahXCplHopUEqwYBJHgccISHqJh~EMQzBZJwoF0sxJZSI40rmw7KcFtyGLLa~1bGVUcSlSChc9Jbg__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA
-> https://seer.ufrgs.br/index.php/renote/article/view/61433/36325
-> http://www.lcad.icmc.usp.br/~jbatista/sce537/mat/Inicio.pdf
-> https://sol.sbc.org.br/index.php/wei/article/view/10248/10120
-> https://repositorio.pucsp.br/jspui/bitstream/handle/26820/1/Rafael%20Troquete.pdf

Explicar os quatro fundametos da POO antes e depois falar como a gente aprendeu ele na prática


1º passo:
    • Tema: Análise de estratégias para melhorar o aprendizado da programação orientada a objetos com java  
    • Problema de pesquisa: Como melhorar o aprendizado da POO?
    • Objetivo Geral: Aprimorar o conhecimento da orientação a objeto
    
    
2º passo:

Título do trabalho: Aplicação dos fundamentos da programação orientada a objetos em java com o auxílio de objetos de aprendizagem 

Link: 
• Conceitos básicos de POO: https://www.academia.edu/9646123/CONCEITOS_B%C3%81SICOS_DE_PROGRAMA%C3%87%C3%83O_ORIENTADA_A_OBJETOS?bulkDownload=thisPaper-topRelated-sameAuthor-citingThis-citedByThis-secondOrderCitations&from=cover_page
• Abordagem POO com java: https://www.dca.fee.unicamp.br/cursos/PooJava/Aulas/poojava.pdf
• Abordagem colaborativa para aprender POO: https://sol.sbc.org.br/index.php/sbsc/article/view/9510/9408
• POOkemon: um jogo sobre POO: https://www.sbgames.org/sbgames2018/files/papers/EducacaoShort/188359.pdf
• Objetos de aprendizagem para auxiliar o ensino de conceitos da POO: https://www.seer.ufrgs.br/index.php/renote/article/view/61433/36325
• Paradigmas de Programação: https://fit.faccat.br/~guto/artigos/Artigo_Paradigmas_de_Programacao.pdf
• POO: Uma visão conceitual dos elementos de modelagem: https://repositorio.pucsp.br/jspui/bitstream/handle/26820/1/Rafael%20Troquete.pdf
• Objetos de aprendizagem (não é artigo): https://ieducacao.ceie-br.org/objetos-aprendizagem/
• Aprendendo a programar em grupo (tem que baixar o artigo): https://www.researchgate.net/publication/221315528_Aprendendo_a_Programar_em_Grupo


Objetivo: O objetivo do trabalho é aprimorar os conhecimentos dos autores da programação orientada a objetos ao compreender seus fundamentos e aplicá-los em um projeto prático.

Resumo: 
Altos índices de reprovação e desistência são problemas recorrentes em cursos na área da informática, fator que se agrava na disciplina de programação orientada a objetos (POO) devido à complexidade de seus conceitos. 
Dessa forma, esta pesquisa visa realizar uma análise de estratégias para melhorar o aprendizado de POO com java a partir da apresentação de seus quatro fundamentos-base (abstração, encapsulamento,  herança e polimorfismos), que serão aplicados em um (ou mais) projeto(s) práticos(s) desenvolvido(s) com base nos objetos de aprendizagem (OAs) como forma de melhorar o aprendizado dessa disciplina.


- 4 fundamentos base - 

.Abstração
Também conhecida como Ocultamento da informação, a abstração é o princípio pelo qual cada componente deve possuir apenas o mínimo necessário para sua operação em um determinado contexto.

.Encapsulamento
O encapsulamento tem o objetivo de ocultar do usuário toda a complexidade por trás de uma tarefa.   

.Herança
Uma classe (superclasse) pode compartilhar seus atributos e métodos com outras classes (subclasses) que por sua vez possuem seus próprios atributos e métodos.  

.Polimorfismo
O polimorfismo é uma consequência da herança em que classes derivadas de uma mesma superclasse podem invocar métodos que tem a mesma assinatura, mas comportamentos distintos.

